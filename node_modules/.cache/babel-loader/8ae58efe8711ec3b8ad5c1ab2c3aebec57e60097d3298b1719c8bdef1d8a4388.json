{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data: () => ({\n    dialog: false,\n    dialogDelete: false,\n    headers: [{\n      text: \"Name\",\n      align: \"start\",\n      sortable: false,\n      value: \"productName\"\n    }, {\n      text: \"Picture\",\n      sortable: false,\n      value: \"productPicture\"\n    }, {\n      text: \"Description\",\n      value: \"productDescription\"\n    }, {\n      text: \"actions\",\n      align: \"start\",\n      sortable: false,\n      value: \"actions\"\n    }],\n    desserts: [],\n    editedIndex: -1,\n    editedItem: {\n      name: \"\",\n      calories: 0,\n      fat: 0,\n      carbs: 0,\n      protein: 0\n    },\n    defaultItem: {\n      name: \"\",\n      calories: 0,\n      fat: 0,\n      carbs: 0,\n      protein: 0\n    }\n  }),\n  scopedSlots: {\n    picture: item => {\n      return this.$createElement(\"img\", {\n        attrs: {\n          src: item.picture,\n          // ใช้ URL รูปภาพจากข้อมูล\n          alt: item.name,\n          // ใช้ชื่อเป็นคำอธิบายรูปภาพ\n          style: \"max-width: 100px;\" // กำหนดขนาดสูงสุดของรูปภาพ\n        }\n      });\n    }\n  },\n\n  computed: {\n    formTitle() {\n      return this.editedIndex === -1 ? \"New Product\" : \"Edit Product\";\n    }\n  },\n  watch: {\n    dialog(val) {\n      val || this.close();\n    },\n    dialogDelete(val) {\n      val || this.closeDelete();\n    }\n  },\n  created() {\n    this.initialize();\n  },\n  methods: {\n    async initialize() {\n      this.desserts = [];\n      try {\n        var data = await this.axios.get(\"http://localhost:8080/product\");\n        console.log(\"data product ====>\", data);\n        this.desserts = data.data;\n      } catch (error) {}\n    },\n    computed: {\n      formTitle() {\n        return this.editedIndex === -1 ? \"New Product\" : \"Edit Product\";\n      }\n    },\n    editItem(item) {\n      this.editedIndex = this.desserts.indexOf(item);\n      this.editedItem = Object.assign({}, item);\n      this.dialog = true;\n    },\n    async deleteItem(item) {\n      // this.editedIndex = this.desserts.indexOf(item);\n      // this.editedItem = Object.assign({}, item);\n      // this.dialogDelete = true;\n\n      try {\n        var data = await this.axios.delete(`http://localhost:8080/product/${item.productId}`);\n        if (data.status === 200) {\n          this.initialize();\n          alert(\"ลบสำเร็จ\");\n        }\n      } catch (error) {}\n    },\n    async addProduct() {\n      try {\n        // Create a new FormData object\n        const formData = new FormData();\n\n        // Append the fields to the FormData object\n        const data = {\n          productName: this.editedItem.productName,\n          productDescription: this.editedItem.productDescription\n        };\n        formData.append(\"body\", JSON.stringify(data));\n        formData.append(\"photo\", this.editedItem.selectedImage);\n        const response = await this.axios.post(\"http://localhost:8080/product\", formData, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\" // Set the content type to multipart/form-data\n          }\n        });\n\n        if (response.status === 201) {\n          // await this.initialize();\n          alert(\"เพิ่มสำเร็จ\");\n          window.product.reload();\n        }\n      } catch (error) {\n        console.error(\"Error adding product:\", error);\n      }\n    },\n    deleteItemConfirm() {\n      this.desserts.splice(this.editedIndex, 1);\n      this.closeDelete();\n    },\n    close() {\n      this.dialog = false;\n      this.$nextTick(() => {\n        this.editedItem = Object.assign({}, this.defaultItem);\n        this.editedIndex = -1;\n      });\n    },\n    closeDelete() {\n      this.dialogDelete = false;\n      this.$nextTick(() => {\n        this.editedItem = Object.assign({}, this.defaultItem);\n        this.editedIndex = -1;\n      });\n    },\n    save() {\n      if (this.editedIndex > -1) {\n        Object.assign(this.desserts[this.editedIndex], this.editedItem);\n      } else {\n        this.desserts.push(this.editedItem);\n      }\n      this.close();\n    },\n    handleImageUpload(event) {\n      const selectedFile = event.target.files[0]; // Get the selected file\n      // You can now do something with the selected image file, for example, send it to the server.\n      // Here, we'll just store the selected file in a data property for reference.\n      this.editedItem.selectedImage = selectedFile;\n    }\n  }\n};","map":{"version":3,"names":["data","dialog","dialogDelete","headers","text","align","sortable","value","desserts","editedIndex","editedItem","name","calories","fat","carbs","protein","defaultItem","scopedSlots","picture","item","$createElement","attrs","src","alt","style","computed","formTitle","watch","val","close","closeDelete","created","initialize","methods","axios","get","console","log","error","editItem","indexOf","Object","assign","deleteItem","delete","productId","status","alert","addProduct","formData","FormData","productName","productDescription","append","JSON","stringify","selectedImage","response","post","window","product","reload","deleteItemConfirm","splice","$nextTick","save","push","handleImageUpload","event","selectedFile","target","files"],"sources":["src/components/EditDelete.vue"],"sourcesContent":["<template>\n  <div>\n    <v-data-table :headers=\"headers\" :items=\"desserts\" class=\"elevation-1\">\n      <template v-slot:top>\n        <v-toolbar flat>\n          <v-toolbar-title>จัดการ Product</v-toolbar-title>\n          <v-divider class=\"mx-4\" inset vertical></v-divider>\n          <v-spacer></v-spacer>\n          <v-dialog v-model=\"dialog\" max-width=\"500px\">\n            <template v-slot:activator=\"{ on, attrs }\">\n              <v-btn color=\"primary\" dark class=\"mb-2\" v-bind=\"attrs\" v-on=\"on\">\n                เพิ่ม\n              </v-btn>\n            </template>\n            <v-card>\n              <v-card-title>\n                <span class=\"text-h5\">{{ formTitle }}</span>\n              </v-card-title>\n\n              <v-card-text>\n                <v-container>\n                  <v-row>\n                    <v-col cols=\"2\" sm=\"12\" md=\"12\">\n                      <input\n                        type=\"file\"   \n                        v-on:change=\"handleImageUpload\" \n                      > </input>\n                    </v-col>\n\n                    <v-col cols=\"1\" sm=\"6\" md=\"4\">\n                      <v-text-field v-model=\"editedItem.productName\" label=\"Name\"></v-text-field>\n<v-text-field v-model=\"editedItem.productDescription\" label=\"Description\"></v-text-field>\n\n                    </v-col>\n                  </v-row>\n                </v-container>\n              </v-card-text>\n\n              <v-card-actions>\n                <v-spacer></v-spacer>\n                <v-btn color=\"red darken-1\" text @click=\"close\"> Cancel </v-btn>\n                <v-btn color=\"blue darken-1\" text @click=\"addProduct\">\n                  Save\n                </v-btn>\n              </v-card-actions>\n            </v-card>\n          </v-dialog>\n          <v-dialog v-model=\"dialogDelete\" max-width=\"500px\">\n            <v-card>\n              <v-card-title class=\"text-h5\"\n                >คุณแน่ใจหรือว่าต้องการลบรายการนี้?</v-card-title\n              >\n              <v-card-actions>\n                <v-spacer></v-spacer>\n                <v-btn color=\"blue darken-1\" text @click=\"closeDelete\"\n                  >Cancel</v-btn\n                >\n                <v-btn color=\"red darken-1\" text @click=\"deleteItemConfirm\"\n                  >OK</v-btn\n                >\n                <v-spacer></v-spacer>\n              </v-card-actions>\n            </v-card>\n          </v-dialog>\n        </v-toolbar>\n      </template>\n      <template v-slot:item.productPicture=\"{ item }\">\n        <img\n          :src=\"'data:image/jpeg;base64,' + item.productPicture\"\n          alt=\"Image\"\n          style=\"max-width: 200px\"\n        />\n      </template>\n\n      <template v-slot:item.actions=\"{ item }\">\n         <v-btn small outlined @click=\"openDialog('edit', item)\" color=\"blue\">\n      <v-icon>\n        mdi-pencil\n      </v-icon>\n      </v-btn>\n      <v-btn small outlined @click=\"deleteItem(item)\" color=\"red\" class=\"ml-2\">\n      <v-icon>\n        mdi-delete\n      </v-icon>\n      </v-btn>\n      </template>\n      <template v-slot:no-data>\n        <v-btn color=\"primary\" @click=\"initialize\"> Reset </v-btn>\n      </template>\n    </v-data-table>\n  </div>\n</template>\n\n\n<script>\nexport default {\n  data: () => ({\n    dialog: false,\n    dialogDelete: false,\n    headers: [\n      {\n        text: \"Name\",\n        align: \"start\",\n        sortable: false,\n        value: \"productName\",\n      },\n      {\n        text: \"Picture\",\n        sortable: false,\n        value: \"productPicture\",\n      },\n      {\n        text: \"Description\",\n        value: \"productDescription\",\n      },\n      {\n        text: \"actions\",\n        align: \"start\",\n        sortable: false,\n        value: \"actions\",\n      },\n    ],\n\n    desserts: [],\n    editedIndex: -1,\n\n    editedItem: {\n      name: \"\",\n      calories: 0,\n      fat: 0,\n      carbs: 0,\n      protein: 0,\n    },\n    defaultItem: {\n      name: \"\",\n      calories: 0,\n      fat: 0,\n      carbs: 0,\n      protein: 0,\n    },\n  }),\n  scopedSlots: {\n    picture: (item) => {\n      return this.$createElement(\"img\", {\n        attrs: {\n          src: item.picture, // ใช้ URL รูปภาพจากข้อมูล\n          alt: item.name, // ใช้ชื่อเป็นคำอธิบายรูปภาพ\n          style: \"max-width: 100px;\", // กำหนดขนาดสูงสุดของรูปภาพ\n        },\n      });\n    },\n  },\n\n  computed: {\n    formTitle() {\n      return this.editedIndex === -1 ? \"New Product\" : \"Edit Product\";\n    },\n  },\n\n  watch: {\n    dialog(val) {\n      val || this.close();\n    },\n    dialogDelete(val) {\n      val || this.closeDelete();\n    },\n  },\n\n  created() {\n    this.initialize();\n  },\n\n  methods: {\n    async initialize() {\n      this.desserts = [];\n      try {\n        var data = await this.axios.get(\"http://localhost:8080/product\");\n\n        console.log(\"data product ====>\", data);\n        this.desserts = data.data;\n      } catch (error) {}\n    },\n\n    computed: {\n      formTitle() {\n        return this.editedIndex === -1 ? \"New Product\" : \"Edit Product\";\n      },\n    },\n\n    editItem(item) {\n  this.editedIndex = this.desserts.indexOf(item);\n  this.editedItem = Object.assign({}, item);\n  this.dialog = true;\n},\n    \n\n    async deleteItem(item) {\n      // this.editedIndex = this.desserts.indexOf(item);\n      // this.editedItem = Object.assign({}, item);\n      // this.dialogDelete = true;\n\n      try {\n        var data = await this.axios.delete(\n          `http://localhost:8080/product/${item.productId}`\n        );\n\n        if (data.status === 200) {\n          this.initialize();\n          alert(\"ลบสำเร็จ\");\n        }\n      } catch (error) {}\n    },\n    async addProduct() {\n      try {\n        // Create a new FormData object\n        const formData = new FormData();\n\n        // Append the fields to the FormData object\n        const data = {\n          productName: this.editedItem.productName,\n          productDescription: this.editedItem.productDescription,\n        };\n        formData.append(\"body\", JSON.stringify(data));\n        formData.append(\"photo\", this.editedItem.selectedImage);\n\n        const response = await this.axios.post(\n          \"http://localhost:8080/product\",\n          formData,\n          {\n            headers: {\n              \"Content-Type\": \"multipart/form-data\", // Set the content type to multipart/form-data\n            },\n          }\n        );\n\n        if (response.status === 201) {\n          // await this.initialize();\n          alert(\"เพิ่มสำเร็จ\");\n          window.product.reload()\n        }\n      } catch (error) {\n        console.error(\"Error adding product:\", error);\n      }\n    },\n\n    deleteItemConfirm() {\n      this.desserts.splice(this.editedIndex, 1);\n      this.closeDelete();\n    },\n\n    close() {\n      this.dialog = false;\n      this.$nextTick(() => {\n        this.editedItem = Object.assign({}, this.defaultItem);\n        this.editedIndex = -1;\n      });\n    },\n\n    closeDelete() {\n      this.dialogDelete = false;\n      this.$nextTick(() => {\n        this.editedItem = Object.assign({}, this.defaultItem);\n        this.editedIndex = -1;\n      });\n    },\n\n    save() {\n  if (this.editedIndex > -1) {\n    Object.assign(this.desserts[this.editedIndex], this.editedItem);\n  } else {\n    this.desserts.push(this.editedItem);\n  }\n  this.close();\n}\n,\n    handleImageUpload(event) {\n      const selectedFile = event.target.files[0]; // Get the selected file\n      // You can now do something with the selected image file, for example, send it to the server.\n      // Here, we'll just store the selected file in a data property for reference.\n      this.editedItem.selectedImage = selectedFile;\n    },\n  },\n};\n</script>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}