{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data: () => ({\n    valid: true,\n    username: \"\",\n    usernameRules: [v => !!v || \"กรุณากรอกชื่อผู้ใช้งาน\"],\n    password: \"\",\n    passwordRules: [v => !!v || \"กรุณากรอกรหัสผ่าน\"]\n  }),\n  methods: {\n    async login() {\n      if (this.$refs.loginForm.validate()) {\n        const credentials = {\n          username: this.username,\n          password: this.password\n        };\n        try {\n          const response = await this.axios.post(\"http://localhost:8080/api/login\", credentials);\n          if (response.status === 200) {\n            // Login success\n            this.$router.push(\"/HomeAdmin\");\n          } else {\n            // Handle other cases (e.g., unauthorized, internal server error)\n            console.error(\"Login failed:\", response.data);\n          }\n        } catch (error) {\n          // Handle network error or other exceptions\n          console.error(\"Error during login:\", error);\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","valid","username","usernameRules","v","password","passwordRules","methods","login","$refs","loginForm","validate","credentials","response","axios","post","status","$router","push","console","error"],"sources":["src/components/Login.vue"],"sourcesContent":["<template>\n  <v-app>\n    <v-main>\n      <v-container>\n        <v-row justify=\"center\">\n          <v-col cols=\"4\" class=\"text-center\">\n            <v-card class=\"mx-auto mt-15\" style=\"width: 100%; height: 350px;\">\n              <v-card-title style=\"font-size: 25px; color: #33CCCC\" >\n                เข้าสู่ระบบ\n              </v-card-title>\n              <v-card-text class=\"mx-auto mt-5\">\n                <v-form ref=\"loginForm\" v-model=\"valid\" lazy-validation>\n                  <v-text-field\n                    v-model=\"username\"\n                    :rules=\"usernameRules\"\n                    label=\"Username\"\n                    placeholder=\"Username\"\n                    required\n                    outlined\n                  ></v-text-field>\n\n                  <v-text-field\n                    v-model=\"password\"\n                    :rules=\"passwordRules\"\n                    label=\"Password\"\n                    placeholder=\"Password\"\n                    type=\"password\"\n                    required\n                    outlined\n                  ></v-text-field>\n                  <v-row justify=\"center\" class=\"mx-auto mt-2\">\n                    <v-col cols=\"12\" sm=\"8\" md=\"6\" class=\"text-center\">\n                      <v-btn\n                        :disabled=\"!valid\"\n                        color=\"#33CCCC\"\n                        @click=\"login\"\n                        style=\"text-align: center; color: #FFFFFF;\"\n                      >\n                        เข้าสู่ระบบ\n                      </v-btn>\n                    </v-col>\n                  </v-row>\n                </v-form>\n              </v-card-text>\n            </v-card>\n          </v-col>\n        </v-row>\n      </v-container>\n    </v-main>\n  </v-app>\n</template>\n\n<script>\nexport default {\n  data: () => ({\n    valid: true,\n    username: \"\",\n    usernameRules: [\n      (v) => !!v || \"กรุณากรอกชื่อผู้ใช้งาน\",\n    ],\n    password: \"\",\n    passwordRules: [\n      (v) => !!v || \"กรุณากรอกรหัสผ่าน\",\n    ],\n  }),\n  methods: {\n    async login() {\n      if (this.$refs.loginForm.validate()) {\n        const credentials = {\n          username: this.username,\n          password: this.password,\n        };\n\n        try {\n          const response = await this.axios.post(\n            \"http://localhost:8080/api/login\",\n            credentials\n          );\n\n          if (response.status === 200) {\n            // Login success\n            this.$router.push(\"/HomeAdmin\");\n          } else {\n            // Handle other cases (e.g., unauthorized, internal server error)\n            console.error(\"Login failed:\", response.data);\n          }\n        } catch (error) {\n          // Handle network error or other exceptions\n          console.error(\"Error during login:\", error);\n        }\n      }\n    },\n  },\n};\n</script>\n"],"mappings":";AAqDA;EACAA,IAAA,EAAAA,CAAA;IACAC,KAAA;IACAC,QAAA;IACAC,aAAA,GACAC,CAAA,MAAAA,CAAA,6BACA;IACAC,QAAA;IACAC,aAAA,GACAF,CAAA,MAAAA,CAAA;EAEA;EACAG,OAAA;IACA,MAAAC,MAAA;MACA,SAAAC,KAAA,CAAAC,SAAA,CAAAC,QAAA;QACA,MAAAC,WAAA;UACAV,QAAA,OAAAA,QAAA;UACAG,QAAA,OAAAA;QACA;QAEA;UACA,MAAAQ,QAAA,cAAAC,KAAA,CAAAC,IAAA,CACA,mCACAH,WACA;UAEA,IAAAC,QAAA,CAAAG,MAAA;YACA;YACA,KAAAC,OAAA,CAAAC,IAAA;UACA;YACA;YACAC,OAAA,CAAAC,KAAA,kBAAAP,QAAA,CAAAb,IAAA;UACA;QACA,SAAAoB,KAAA;UACA;UACAD,OAAA,CAAAC,KAAA,wBAAAA,KAAA;QACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}