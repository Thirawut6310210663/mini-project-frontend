{"ast":null,"code":"export default {\n  data: () => ({\n    dialog: false,\n    dialogDelete: false,\n    headers: [{\n      text: \"Name\",\n      align: \"start\",\n      sortable: false,\n      value: \"productName\"\n    }, {\n      text: \"Picture\",\n      sortable: false,\n      value: \"productPicture\"\n    }, {\n      text: \"Description\",\n      value: \"productDescription\"\n    }, {\n      text: \"Actions\",\n      align: \"start\",\n      sortable: false,\n      value: \"actions\"\n    }],\n    desserts: [],\n    editedIndex: -1,\n    editedItem: {\n      productName: \"\",\n      productDescription: \"\",\n      productPicture: \"\",\n      selectedImage: null\n    },\n    defaultItem: {\n      productName: \"\",\n      productDescription: \"\",\n      productPicture: \"\",\n      selectedImage: null\n    }\n  }),\n  watch: {\n    dialog(val) {\n      val || this.close();\n    },\n    dialogDelete(val) {\n      val || this.closeDelete();\n    }\n  },\n  created() {\n    this.initialize();\n  },\n  methods: {\n    async initialize() {\n      this.desserts = [];\n      try {\n        var data = await this.axios.get(\"http://localhost:8080/product\");\n        this.desserts = data.data;\n      } catch (error) {\n        console.error(error.message);\n      }\n    },\n    openDialog(type, item) {\n      if (type === \"edit\") {\n        this.editItem(item);\n      } else {\n        this.dialog = true;\n        this.formTitle = \"New Product\";\n        this.editedItem = Object.assign({}, this.defaultItem);\n      }\n    },\n    editItem(item) {\n      this.editedIndex = this.desserts.indexOf(item);\n      this.editedItem = {\n        productName: item.productName,\n        productDescription: item.productDescription,\n        productPicture: item.productPicture,\n        selectedImage: null\n      };\n      this.dialog = true;\n      this.formTitle = \"Edit Product\";\n    },\n    async deleteItem(item) {\n      try {\n        var data = await this.axios.delete(`http://localhost:8080/product/${item.productId}`);\n        if (data.status === 200) {\n          alert(\"Deleted successfully\");\n          this.initialize();\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    async saveProduct() {\n      try {\n        const formData = new FormData();\n\n        // Append JSON data\n        formData.append(\"productName\", this.editedItem.productName);\n        formData.append(\"productDescription\", this.editedItem.productDescription);\n\n        // Append image file\n        formData.append(\"photo\", this.editedItem.selectedImage);\n\n        // Ensure Content-Type header is set correctly\n        const response = await this.axios.post(\"http://localhost:8080/product\", formData);\n        if (response.status === 201) {\n          this.initialize();\n          alert(\"Added successfully\");\n          this.close();\n        }\n      } catch (error) {\n        console.error(\"Error adding product:\", error);\n      }\n    },\n    deleteItemConfirm() {\n      this.desserts.splice(this.editedIndex, 1);\n      this.closeDelete();\n    },\n    close() {\n      this.dialog = false;\n      this.editedItem = Object.assign({}, this.defaultItem);\n      this.editedIndex = -1;\n    },\n    closeDelete() {\n      this.dialogDelete = false;\n    }\n  }\n};","map":{"version":3,"names":["data","dialog","dialogDelete","headers","text","align","sortable","value","desserts","editedIndex","editedItem","productName","productDescription","productPicture","selectedImage","defaultItem","watch","val","close","closeDelete","created","initialize","methods","axios","get","error","console","message","openDialog","type","item","editItem","formTitle","Object","assign","indexOf","deleteItem","delete","productId","status","alert","saveProduct","formData","FormData","append","response","post","deleteItemConfirm","splice"],"sources":["src/components/EditDelete.vue"],"sourcesContent":["<template>\n  <div>\n    <v-data-table :headers=\"headers\" :items=\"desserts\" class=\"elevation-1\">\n      <template v-slot:item.actions=\"{ item }\">\n    <v-btn small outlined @click=\"openDialog('edit', item)\" color=\"blue\">\n      <v-icon>mdi-pencil</v-icon>\n    </v-btn>\n    <v-btn small outlined @click=\"deleteItem(item)\" color=\"red\" class=\"ml-2\">\n      <v-icon>mdi-delete</v-icon>\n    </v-btn>\n  </template>\n\n      <template v-slot:item.productPicture=\"{ item }\">\n        <img\n          :src=\"'data:image/jpeg;base64,' + item.productPicture\"\n          alt=\"Image\"\n          style=\"max-width: 100px\"\n        />\n      </template>\n\n      <template v-slot:item.actions=\"{ item }\">\n        <v-btn small outlined @click=\"openDialog('edit', item)\" color=\"blue\">\n          <v-icon>mdi-pencil</v-icon>\n        </v-btn>\n        <v-btn small outlined @click=\"deleteItem(item)\" color=\"red\" class=\"ml-2\">\n          <v-icon>mdi-delete</v-icon>\n        </v-btn>\n      </template>\n\n      <template v-slot:no-data>\n    <v-btn color=\"primary\" @click=\"initialize\"> Reset </v-btn>\n  </template>\n</v-data-table>\n    </v-data-table>\n\n    <v-dialog v-model=\"dialog\" max-width=\"500px\">\n      <v-card>\n        <v-card-title>\n          <span class=\"text-h5\">{{ formTitle }}</span>\n        </v-card-title>\n\n        <v-card-text>\n          <v-container>\n            <v-row>\n              <v-col cols=\"2\" sm=\"12\" md=\"12\">\n                <input type=\"file\" @change=\"handleImageUpload\" />\n              </v-col>\n\n              <v-col cols=\"1\" sm=\"6\" md=\"4\">\n                <v-text-field v-model=\"editedItem.productName\" label=\"Name\"></v-text-field>\n              </v-col>\n\n              <v-col cols=\"12\" sm=\"6\" md=\"4\">\n                <v-text-field v-model=\"editedItem.productDescription\" label=\"Description\"></v-text-field>\n              </v-col>\n            </v-row>\n          </v-container>\n        </v-card-text>\n\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn color=\"red darken-1\" text @click=\"close\"> Cancel </v-btn>\n          <v-btn color=\"blue darken-1\" text @click=\"saveProduct\"> Save </v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n\n    <v-dialog v-model=\"dialogDelete\" max-width=\"500px\">\n      <v-card>\n        <v-card-title class=\"text-h5\">คุณแน่ใจหรือว่าต้องการลบรายการนี้?</v-card-title>\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn color=\"blue darken-1\" text @click=\"closeDelete\"> Cancel </v-btn>\n          <v-btn color=\"red darken-1\" text @click=\"deleteItemConfirm\"> OK </v-btn>\n          <v-spacer></v-spacer>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n  </div>\n</template>\n\n<script>\nexport default {\n  data: () => ({\n    dialog: false,\n    dialogDelete: false,\n    headers: [\n      { text: \"Name\", align: \"start\", sortable: false, value: \"productName\" },\n      { text: \"Picture\", sortable: false, value: \"productPicture\" },\n      { text: \"Description\", value: \"productDescription\" },\n      { text: \"Actions\", align: \"start\", sortable: false, value: \"actions\" },\n    ],\n    desserts: [],\n    editedIndex: -1,\n    editedItem: {\n      productName: \"\",\n      productDescription: \"\",\n      productPicture: \"\",\n      selectedImage: null,\n    },\n    defaultItem: {\n      productName: \"\",\n      productDescription: \"\",\n      productPicture: \"\",\n      selectedImage: null,\n    },\n  }),\n\n  watch: {\n    dialog(val) {\n      val || this.close();\n    },\n    dialogDelete(val) {\n      val || this.closeDelete();\n    },\n  },\n\n  created() {\n    this.initialize();\n  },\n\n  methods: {\n    async initialize() {\n      this.desserts = [];\n      try {\n        var data = await this.axios.get(\"http://localhost:8080/product\");\n        this.desserts = data.data;\n      } catch (error) {\n        console.error(error.message);\n      }\n    },\n\n    openDialog(type, item) {\n      if (type === \"edit\") {\n        this.editItem(item);\n      } else {\n        this.dialog = true;\n        this.formTitle = \"New Product\";\n        this.editedItem = Object.assign({}, this.defaultItem);\n      }\n    },\n\n    editItem(item) {\n      this.editedIndex = this.desserts.indexOf(item);\n      this.editedItem = {\n        productName: item.productName,\n        productDescription: item.productDescription,\n        productPicture: item.productPicture,\n        selectedImage: null,\n      };\n      this.dialog = true;\n      this.formTitle = \"Edit Product\";\n    },\n\n    async deleteItem(item) {\n  try {\n    var data = await this.axios.delete(\n      `http://localhost:8080/product/${item.productId}`\n    );\n    if (data.status === 200) {\n      alert(\"Deleted successfully\");\n      this.initialize();\n    }\n  } catch (error) {\n    console.error(error);\n  }\n},\n\n\n    async saveProduct() {\n  try {\n    const formData = new FormData();\n\n    // Append JSON data\n    formData.append(\"productName\", this.editedItem.productName);\n    formData.append(\"productDescription\", this.editedItem.productDescription);\n\n    // Append image file\n    formData.append(\"photo\", this.editedItem.selectedImage);\n\n    // Ensure Content-Type header is set correctly\n    const response = await this.axios.post(\n      \"http://localhost:8080/product\",\n      formData\n    );\n\n    if (response.status === 201) {\n      this.initialize();\n      alert(\"Added successfully\");\n      this.close();\n    }\n  } catch (error) {\n    console.error(\"Error adding product:\", error);\n  }\n},\n\n\n    deleteItemConfirm() {\n      this.desserts.splice(this.editedIndex, 1);\n      this.closeDelete();\n    },\n\n    close() {\n      this.dialog = false;\n      this.editedItem = Object.assign({}, this.defaultItem);\n      this.editedIndex = -1;\n    },\n\n    closeDelete() {\n      this.dialogDelete = false;\n    },\n  },\n};\n</script>\n"],"mappings":"AAkFA;EACAA,IAAA,EAAAA,CAAA;IACAC,MAAA;IACAC,YAAA;IACAC,OAAA,GACA;MAAAC,IAAA;MAAAC,KAAA;MAAAC,QAAA;MAAAC,KAAA;IAAA,GACA;MAAAH,IAAA;MAAAE,QAAA;MAAAC,KAAA;IAAA,GACA;MAAAH,IAAA;MAAAG,KAAA;IAAA,GACA;MAAAH,IAAA;MAAAC,KAAA;MAAAC,QAAA;MAAAC,KAAA;IAAA,EACA;IACAC,QAAA;IACAC,WAAA;IACAC,UAAA;MACAC,WAAA;MACAC,kBAAA;MACAC,cAAA;MACAC,aAAA;IACA;IACAC,WAAA;MACAJ,WAAA;MACAC,kBAAA;MACAC,cAAA;MACAC,aAAA;IACA;EACA;EAEAE,KAAA;IACAf,OAAAgB,GAAA;MACAA,GAAA,SAAAC,KAAA;IACA;IACAhB,aAAAe,GAAA;MACAA,GAAA,SAAAE,WAAA;IACA;EACA;EAEAC,QAAA;IACA,KAAAC,UAAA;EACA;EAEAC,OAAA;IACA,MAAAD,WAAA;MACA,KAAAb,QAAA;MACA;QACA,IAAAR,IAAA,cAAAuB,KAAA,CAAAC,GAAA;QACA,KAAAhB,QAAA,GAAAR,IAAA,CAAAA,IAAA;MACA,SAAAyB,KAAA;QACAC,OAAA,CAAAD,KAAA,CAAAA,KAAA,CAAAE,OAAA;MACA;IACA;IAEAC,WAAAC,IAAA,EAAAC,IAAA;MACA,IAAAD,IAAA;QACA,KAAAE,QAAA,CAAAD,IAAA;MACA;QACA,KAAA7B,MAAA;QACA,KAAA+B,SAAA;QACA,KAAAtB,UAAA,GAAAuB,MAAA,CAAAC,MAAA,UAAAnB,WAAA;MACA;IACA;IAEAgB,SAAAD,IAAA;MACA,KAAArB,WAAA,QAAAD,QAAA,CAAA2B,OAAA,CAAAL,IAAA;MACA,KAAApB,UAAA;QACAC,WAAA,EAAAmB,IAAA,CAAAnB,WAAA;QACAC,kBAAA,EAAAkB,IAAA,CAAAlB,kBAAA;QACAC,cAAA,EAAAiB,IAAA,CAAAjB,cAAA;QACAC,aAAA;MACA;MACA,KAAAb,MAAA;MACA,KAAA+B,SAAA;IACA;IAEA,MAAAI,WAAAN,IAAA;MACA;QACA,IAAA9B,IAAA,cAAAuB,KAAA,CAAAc,MAAA,CACA,iCAAAP,IAAA,CAAAQ,SAAA,EACA;QACA,IAAAtC,IAAA,CAAAuC,MAAA;UACAC,KAAA;UACA,KAAAnB,UAAA;QACA;MACA,SAAAI,KAAA;QACAC,OAAA,CAAAD,KAAA,CAAAA,KAAA;MACA;IACA;IAGA,MAAAgB,YAAA;MACA;QACA,MAAAC,QAAA,OAAAC,QAAA;;QAEA;QACAD,QAAA,CAAAE,MAAA,qBAAAlC,UAAA,CAAAC,WAAA;QACA+B,QAAA,CAAAE,MAAA,4BAAAlC,UAAA,CAAAE,kBAAA;;QAEA;QACA8B,QAAA,CAAAE,MAAA,eAAAlC,UAAA,CAAAI,aAAA;;QAEA;QACA,MAAA+B,QAAA,cAAAtB,KAAA,CAAAuB,IAAA,CACA,iCACAJ,QACA;QAEA,IAAAG,QAAA,CAAAN,MAAA;UACA,KAAAlB,UAAA;UACAmB,KAAA;UACA,KAAAtB,KAAA;QACA;MACA,SAAAO,KAAA;QACAC,OAAA,CAAAD,KAAA,0BAAAA,KAAA;MACA;IACA;IAGAsB,kBAAA;MACA,KAAAvC,QAAA,CAAAwC,MAAA,MAAAvC,WAAA;MACA,KAAAU,WAAA;IACA;IAEAD,MAAA;MACA,KAAAjB,MAAA;MACA,KAAAS,UAAA,GAAAuB,MAAA,CAAAC,MAAA,UAAAnB,WAAA;MACA,KAAAN,WAAA;IACA;IAEAU,YAAA;MACA,KAAAjB,YAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}